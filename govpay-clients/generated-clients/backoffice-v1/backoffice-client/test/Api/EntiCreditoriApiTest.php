<?php
/**
 * EntiCreditoriApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  GovPay\Backoffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * GovPay - API Backoffice
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.45.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.17.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace GovPay\Backoffice\Test\Api;

use \GovPay\Backoffice\Configuration;
use \GovPay\Backoffice\ApiException;
use \GovPay\Backoffice\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EntiCreditoriApiTest Class Doc Comment
 *
 * @category Class
 * @package  GovPay\Backoffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EntiCreditoriApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addContiAccredito
     *
     * Aggiunge o aggiorna un iban di accredito al dominio beneficiario.
     *
     */
    public function testAddContiAccredito()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addDominio
     *
     * Aggiunge o aggiorna un dominio beneficiario.
     *
     */
    public function testAddDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEntrata
     *
     * Aggiunge o aggiorna una entrata.
     *
     */
    public function testAddEntrata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEntrataDominio
     *
     * Aggiunge o aggiorna una entrata al dominio beneficiario.
     *
     */
    public function testAddEntrataDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addIntermediario
     *
     * Aggiunge o aggiorna un intermediario.
     *
     */
    public function testAddIntermediario()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addStazione
     *
     * Aggiunge o aggiorna una stazione.
     *
     */
    public function testAddStazione()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addTipoPendenza
     *
     * Aggiunge o aggiorna una tipologia di pendenza.
     *
     */
    public function testAddTipoPendenza()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addTipoPendenzaDominio
     *
     * Aggiunge o aggiorna una tipologia di pendenza al dominio beneficiario.
     *
     */
    public function testAddTipoPendenzaDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addUnitaOperativa
     *
     * Aggiunge o aggiorna un'unità operativa al dominio beneficiario.
     *
     */
    public function testAddUnitaOperativa()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findContiAccredito
     *
     * Elenco degli iban di accredito del beneficiario.
     *
     */
    public function testFindContiAccredito()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findDomini
     *
     * Elenco dei domini beneficiari censiti.
     *
     */
    public function testFindDomini()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findEntrate
     *
     * Elenco delle tipologie di entrata.
     *
     */
    public function testFindEntrate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findEntrateDominio
     *
     * Elenco delle tipologie di entrata del dominio.
     *
     */
    public function testFindEntrateDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findIntermediari
     *
     * Elenco degli intermediari.
     *
     */
    public function testFindIntermediari()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findStazioni
     *
     * Elenco delle stazioni di un intermediario.
     *
     */
    public function testFindStazioni()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findTipiPendenza
     *
     * Elenco delle tipologie di pendenza.
     *
     */
    public function testFindTipiPendenza()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findTipiPendenzaDominio
     *
     * Elenco delle tipologie di pendenza del dominio.
     *
     */
    public function testFindTipiPendenzaDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findUnitaOperative
     *
     * Elenco delle unità operative del beneficiario.
     *
     */
    public function testFindUnitaOperative()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContiAccredito
     *
     * Lettura dei dati di un iban di accredito.
     *
     */
    public function testGetContiAccredito()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDominio
     *
     * Lettura dei dati di un dominio beneficiario.
     *
     */
    public function testGetDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEntrata
     *
     * Lettura dei dati di una tipologia di entrata.
     *
     */
    public function testGetEntrata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEntrataDominio
     *
     * Lettura dei dati di una entrata.
     *
     */
    public function testGetEntrataDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntermediario
     *
     * Informazioni di un intermediario.
     *
     */
    public function testGetIntermediario()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStazione
     *
     * Informazioni di una stazione intermediario.
     *
     */
    public function testGetStazione()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTipoPendenza
     *
     * Lettura dei dati di una tipologia di pendenza.
     *
     */
    public function testGetTipoPendenza()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTipoPendenzaDominio
     *
     * Lettura dei dati di una tipologia di pendenza del dominio.
     *
     */
    public function testGetTipoPendenzaDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUnitaOperativa
     *
     * Lettura dei dati di una unità operativa.
     *
     */
    public function testGetUnitaOperativa()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
