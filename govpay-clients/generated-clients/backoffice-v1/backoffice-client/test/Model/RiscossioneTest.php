<?php
/**
 * RiscossioneTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  GovPay\Backoffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * GovPay - API Backoffice
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.45.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.17.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace GovPay\Backoffice\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * RiscossioneTest Class Doc Comment
 *
 * @category    Class
 * @description I campi idDominio, iuv, iur, indice, tipo, importo e data sono opzionali se e solo se la riscossione e&#39; all&#39;interno di una rendicontazione con esito uguale a 9.
 * @package     GovPay\Backoffice
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class RiscossioneTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Riscossione"
     */
    public function testRiscossione()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id_dominio"
     */
    public function testPropertyIdDominio()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iuv"
     */
    public function testPropertyIuv()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iur"
     */
    public function testPropertyIur()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "indice"
     */
    public function testPropertyIndice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pendenza"
     */
    public function testPropertyPendenza()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "voce_pendenza"
     */
    public function testPropertyVocePendenza()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rpp"
     */
    public function testPropertyRpp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stato"
     */
    public function testPropertyStato()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tipo"
     */
    public function testPropertyTipo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "importo"
     */
    public function testPropertyImporto()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "data"
     */
    public function testPropertyData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "commissioni"
     */
    public function testPropertyCommissioni()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allegato"
     */
    public function testPropertyAllegato()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incasso"
     */
    public function testPropertyIncasso()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
