{% extends 'base.html.twig' %}

{% block title %}Pendenze - Modifica{% endblock %}

{% block content %}

  {% if errors is defined and errors %}
    <div class="alert alert-danger" role="alert">
      <ul class="mb-0">
        {% for e in errors %}<li>{{ e }}</li>{% endfor %}
      </ul>
    </div>
  {% endif %}

  {% if warnings is defined and warnings %}
    <div class="alert alert-warning" role="alert">
      <ul class="mb-0">
        {% for w in warnings %}<li>{{ w }}</li>{% endfor %}
      </ul>
    </div>
  {% endif %}

  <form method="post" action="/pendenze/aggiorna/{{ idPendenza }}" class="card border-0 shadow-sm mb-4">
    <input type="hidden" name="return_url" value="{{ return_url }}">
    {% if id_dominio is defined and id_dominio %}
      <input type="hidden" name="idDominio" value="{{ id_dominio }}">
    {% endif %}

    {# ID A2A: deve essere preso esclusivamente dalla variabile d'ambiente (mostrato nel body per mantenere header in cima alla card) #}
    <div class="card-header bg-light border-bottom py-3">
      <div class="d-flex flex-column flex-lg-row align-items-lg-center justify-content-lg-between gap-1">
        <h2 class="h5 mb-0">Modifica pendenza <span class="text-muted">{{ idPendenza }}</span></h2>
        <p class="mb-0 text-muted small">Modifica i campi della pendenza</p>
      </div>
    </div>
    <div class="card-body">
      <div class="mb-3">
        {% if not id_a2a %}
          <div class="alert alert-warning small mb-0">Variabile di ambiente <code>ID_A2A</code> non impostata: imposta <code>ID_A2A</code> in <code>.env</code> prima di creare pendenze.</div>
        {% endif %}
      </div>
      <div class="row">
        <div class="form-group col-md-6">
          <label for="idTipoPendenza" class="active">Tipologia pendenza</label>
          <select id="idTipoPendenza" name="idTipoPendenza" class="form-select" required aria-label="Tipologia pendenza">
            <option value="">-- seleziona --</option>
            {% for t in tipologie_pendenze|default([]) %}
              <option value="{{ t.id_entrata }}" {% if old.idTipoPendenza is defined and old.idTipoPendenza == t.id_entrata %}selected{% endif %}>{{ t.nome|default(t.descrizione)|e }}</option>
            {% endfor %}
          </select>
        </div>
        <div class="form-group col-md-3">
          <label for="annoRiferimento" class="active">Anno di riferimento</label>
          {% set current = default_anno|default(date('Y')) %}
          <select id="annoRiferimento" name="annoRiferimento" class="form-select" required aria-label="Anno di riferimento">
            {% for y in range(current + 1, current - 10) %}
              <option value="{{ y }}" {% if (old.annoRiferimento is defined and old.annoRiferimento == y) or (old.annoRiferimento is not defined and y == current) %}selected{% endif %}>{{ y }}</option>
            {% endfor %}
          </select>
        </div>
        <div class="form-group col-md-3">
          <label for="importo" class="active">Importo</label>
          <input id="importo" name="importo" type="number" step="0.01" min="0" class="form-control" required placeholder="0.00" value="{{ old.importo is defined ? old.importo : '' }}">
          <div class="form-text">Inserisci l'importo in euro (es. 100.50).</div>
        </div>
      </div>

      <div class="row g-3 mt-1">
        <div class="form-group col-12">
          <label for="causale" class="active">Causale / Descrizione</label>
          <input type="text" id="causale" name="causale" class="form-control" rows="2" placeholder="Inserisci la causale della pendenza">{{ old.causale|default('') }}</textarea>
          <div class="form-text small">La causale verrà usata automaticamente per la prima voce se non ne viene specificata una diversa.</div>
        </div>
      </div>

      <div class="row g-3 mt-1">
        <div class="form-group col-md-4">
          <label for="dataValidita" class="active">Data validità (opzionale)</label>
          <input id="dataValidita" name="dataValidita" type="date" class="form-control" value="{{ old.dataValidita|default('') }}">
        </div>
        <div class="form-group col-md-4">
          <label for="dataScadenza" class="active">Data scadenza (opzionale)</label>
          <input id="dataScadenza" name="dataScadenza" type="date" class="form-control" value="{{ old.dataScadenza|default('') }}">
        </div>
      </div>

      <div class="row g-3 mt-1">
        {# ID pendenza rimosso: il sistema genera l'id quando non fornito #}
      </div>

      <hr>

      <h3 class="h6">Soggetto pagatore</h3>
      <div class="row g-3 align-items-end">
        <div class="col-12">
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="soggettoPagatore[tipo]" id="soggettoPF" value="F" {% if old.soggettoPagatore is defined and old.soggettoPagatore.tipo is defined and old.soggettoPagatore.tipo == 'G' %}{% else %}checked{% endif %}>
            <label class="form-check-label" for="soggettoPF">Persona fisica</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="soggettoPagatore[tipo]" id="soggettoPJ" value="G" {% if old.soggettoPagatore is defined and old.soggettoPagatore.tipo is defined and old.soggettoPagatore.tipo == 'G' %}checked{% endif %}>
            <label class="form-check-label" for="soggettoPJ">Persona giuridica</label>
          </div>
        </div>

        <div class="col-md-4">
          <div class="form-group">
            <label for="identificativo" class="active">Codice fiscale / Partita IVA</label>
            <input id="identificativo" name="soggettoPagatore[identificativo]" type="text" class="form-control" placeholder="CF o P.IVA" required autocomplete="off" value="{{ old.soggettoPagatore.identificativo|default('') }}">
          </div>
        </div>
        <div class="col-md-4">
          <div class="form-group">
            <label id="lblAnagrafica" for="anagrafica" class="active">Cognome</label>
            <input id="anagrafica" name="soggettoPagatore[anagrafica]" type="text" class="form-control" placeholder="Cognome o Ragione sociale" required value="{{ old.soggettoPagatore.anagrafica|default('') }}">
          </div>
        </div>
        <div class="col-md-4" id="colNome">
          <div class="form-group">
            <label for="nome" class="active">Nome (se persona fisica)</label>
            <input id="nome" name="soggettoPagatore[nome]" type="text" class="form-control" placeholder="Nome" autocomplete="off" value="{{ old.soggettoPagatore.nome|default('') }}">
          </div>
        </div>
        <div class="col-md-6">
          <div class="form-group">
            <label for="email" class="active">Email (opzionale)</label>
            <input id="email" name="soggettoPagatore[email]" type="email" class="form-control" placeholder="esempio@dominio.it" value="{{ old.soggettoPagatore.email|default('') }}">
          </div>
        </div>
      </div>

      <hr>

      <h3 class="h6">Voci di pendenza</h3>
      <p class="text-muted small">Il sistema crea almeno una voce di pendenza; puoi aggiungerne altre se necessario.</p>
      <div id="vociList">
        {% set existingVoci = old.voci|default([]) %}
        {% if existingVoci is iterable and existingVoci|length > 0 %}
          {% for idx, voce in existingVoci %}
            <div class="row g-3 align-items-end voce-item" data-index="{{ idx }}">
              <div class="col-md-3">
                <label for="voce_id_{{ idx }}" class="active">ID voce</label>
                <input id="voce_id_{{ idx }}" name="voci[{{ idx }}][idVocePendenza]" type="text" class="form-control" placeholder="1" value="{{ voce.idVocePendenza|default(voce.idVocePendenza|default('')) }}" required>
              </div>
              <div class="col-md-6">
                <label for="voce_desc_{{ idx }}" class="active">Descrizione voce</label>
                <input id="voce_desc_{{ idx }}" name="voci[{{ idx }}][descrizione]" type="text" class="form-control" placeholder="Descrizione voce" value="{{ voce.descrizione|default('') }}" required>
              </div>
              <div class="col-md-3">
                <label for="voce_imp_{{ idx }}" class="active">Importo voce</label>
                <input id="voce_imp_{{ idx }}" name="voci[{{ idx }}][importo]" type="number" step="0.01" min="0" class="form-control" placeholder="0.00" value="{{ voce.importo|default('') }}" required>
              </div>
            </div>
          {% endfor %}
        {% else %}
          <div class="row g-3 align-items-end voce-item" data-index="0">
            <div class="col-md-3">
              <label for="voce_id_0" class="active">ID voce</label>
              <input id="voce_id_0" name="voci[0][idVocePendenza]" type="text" class="form-control" placeholder="1" value="{{ old.voci[0].idVocePendenza|default('1') }}" required>
            </div>
            <div class="col-md-6">
              <label for="voce_desc_0" class="active">Descrizione voce</label>
              <input id="voce_desc_0" name="voci[0][descrizione]" type="text" class="form-control" placeholder="Descrizione voce" value="{{ old.voci[0].descrizione|default(old.causale|default('')) }}" required>
            </div>
            <div class="col-md-3">
              <label for="voce_imp_0" class="active">Importo voce</label>
              <input id="voce_imp_0" name="voci[0][importo]" type="number" step="0.01" min="0" class="form-control" placeholder="0.00" value="{{ old.voci[0].importo|default(old.importo|default('')) }}" required>
            </div>
          </div>
        {% endif %}
      </div>
      <div class="mt-2 mb-4">
        <button type="button" id="addVoceBtn" class="btn btn-outline-secondary btn-sm">Aggiungi voce</button>
      </div>

      <div class="collapse" id="apiExtra">
        <div class="card card-body">
          <h4 class="h6">Campi avanzati (API)</h4>
            <div class="row g-3">
              <div class="col-md-4">
                <label for="ibanAccredito">IBAN accredito (opzionale)</label>
                <input id="ibanAccredito" name="ibanAccredito" type="text" maxlength="34" class="form-control" placeholder="IT.." value="{{ old.ibanAccredito|default('') }}">
                <div class="form-text small">Se presente, l'IBAN sarà inviato e il codice entrata non verrà inviato.</div>
              </div>
                <div class="col-md-4">
                <label for="codiceContabilita" class="active">Codice contabilita' (opzionale)</label>
                <input id="codiceContabilita" name="codiceContabilita" type="text" maxlength="35" pattern="[A-Za-z0-9\-_.]{1,35}" class="form-control" placeholder="Es. 0114111AP" value="{{ old.codiceContabilita|default(old.codEntrata|default('')) }}">
                <div class="form-text small">Se non è presente l'IBAN, questo valore verrà inviato come <code>codiceContabilita</code>. Non usare caratteri speciali.</div>
              </div>
              <div class="col-md-4">
                <label for="tipoBollo" class="active">Tipo bollo (opzionale)</label>
                <input id="tipoBollo" name="tipoBollo" type="text" maxlength="16" class="form-control" placeholder="Es. 01" value="{{ old.tipoBollo|default('') }}">
              </div>
              <div class="col-md-4">
                <div class="select-wrapper">
                  <label for="tipoContabilita" class="active">Tipo contabilità (opzionale)</label>
                  <select id="tipoContabilita" name="tipoContabilita" class="form-select">
                  <option value="">-- seleziona --</option>
                  <option value="CAPITOLO" {% if old.tipoContabilita is defined and old.tipoContabilita == 'CAPITOLO' %}selected{% endif %}>CAPITOLO</option>
                  <option value="SPECIALE" {% if old.tipoContabilita is defined and old.tipoContabilita == 'SPECIALE' %}selected{% endif %}>SPECIALE</option>
                  <option value="SIOPE" {% if old.tipoContabilita is defined and old.tipoContabilita == 'SIOPE' %}selected{% endif %}>SIOPE</option>
                  <option value="ALTRO" {% if old.tipoContabilita is defined and old.tipoContabilita == 'ALTRO' %}selected{% endif %}>ALTRO</option>
                  </select>
                  <div class="form-text small">Obbligatorio se si invia un codice entrata o altri dati di contabilita'.</div>
                </div>
              </div>
            </div>
            <div class="row g-3 mt-2">
              <div class="col-md-4">
                  <label for="direzione">Direzione (opzionale)</label>
                  <input id="direzione" name="direzione" type="text" class="form-control" value="{{ old.direzione|default('') }}">
                </div>
              <div class="col-md-4">
                <label for="divisione">Divisione (opzionale)</label>
                <input id="divisione" name="divisione" type="text" class="form-control" value="{{ old.divisione|default('') }}">
              </div>
              <div class="col-md-4">
                <label for="cartellaPagamento">Cartella pagamento (opzionale)</label>
                <input id="cartellaPagamento" name="cartellaPagamento" type="text" class="form-control" value="{{ old.cartellaPagamento|default('') }}">
              </div>
            </div>
        </div>
      </div>

      <div class="d-flex gap-2 mt-4">
        <a href="{{ return_url }}" class="btn btn-outline-secondary">Annulla</a>
        <button type="submit" class="btn btn-primary">Aggiorna pendenza</button>
        <a class="btn btn-outline-secondary" href="/pendenze/ricerca">Annulla</a>
        <button type="button" class="btn btn-link ms-auto" data-bs-toggle="collapse" data-bs-target="#apiExtra" aria-expanded="false">Mostra campi avanzati</button>
      </div>
    </div>
  </form>

      <script>
    (function(){
      // Toggle PF/PJ
      const pf = document.getElementById('soggettoPF');
      const pj = document.getElementById('soggettoPJ');
      const colNome = document.getElementById('colNome');
      const lblAnagrafica = document.getElementById('lblAnagrafica');
      const anag = document.getElementById('anagrafica');
      const descVoce0 = document.getElementById('voce_desc_0');
      const importoMain = document.getElementById('importo');
      const voceImp0 = document.getElementById('voce_imp_0');
      const causale = document.getElementById('causale');

      function refreshPersona(){
        const isPF = pf.checked;
        colNome.style.display = isPF ? '' : 'none';
        lblAnagrafica.textContent = isPF ? 'Cognome' : 'Ragione sociale';
        anag.placeholder = isPF ? 'Cognome' : 'Ragione sociale';
      }
      pf.addEventListener('change', refreshPersona);
      pj.addEventListener('change', refreshPersona);
      refreshPersona();

      // Sincronizza la prima voce con causale/importo (se presente)
      const firstVoceDesc = document.querySelector('#vociList .voce-item input[name$="[descrizione]"]');
      const firstVoceImp = document.querySelector('#vociList .voce-item input[name$="[importo]"]');
      const syncVoce0 = function(){
        if (firstVoceDesc) firstVoceDesc.value = causale.value || '';
        if (firstVoceImp) firstVoceImp.value = importoMain.value || '';
      };
      causale.addEventListener('input', syncVoce0);
      importoMain.addEventListener('input', syncVoce0);
      syncVoce0();

  // Aggiungi nuove voci
  let voceIndex = Math.max(0, document.querySelectorAll('#vociList .voce-item').length);
      document.getElementById('addVoceBtn').addEventListener('click', function(){
        const container = document.getElementById('vociList');
        const row = document.createElement('div');
        row.className = 'row g-3 align-items-end voce-item';
        row.setAttribute('data-index', voceIndex);
        row.innerHTML = `
          <div class="col-md-3">
            <label for="voce_id_${voceIndex}" class="active">ID voce</label>
            <input id="voce_id_${voceIndex}" name="voci[${voceIndex}][idVocePendenza]" type="text" class="form-control" placeholder="1" value="${voceIndex + 1}" required>
          </div>
          <div class="col-md-6">
            <label for="voce_desc_${voceIndex}" class="active">Descrizione voce</label>
            <input id="voce_desc_${voceIndex}" name="voci[${voceIndex}][descrizione]" type="text" class="form-control" placeholder="Descrizione voce" required>
          </div>
          <div class="col-md-2">
            <label for="voce_imp_${voceIndex}" class="active">Importo voce</label>
            <input id="voce_imp_${voceIndex}" name="voci[${voceIndex}][importo]" type="number" step="0.01" min="0" class="form-control" placeholder="0.00" required>
          </div>
            <div class="col-md-1 d-flex align-items-center">
            <button type="button" class="btn btn-outline-danger btn-sm ms-auto remove-voce">✖</button>
          </div>
        `;
        container.appendChild(row);
        row.querySelector('.remove-voce').addEventListener('click', function(){ row.remove(); });
        voceIndex++;
      });
      // Disable codiceContabilita input when IBAN is present
      const ibanInput = document.getElementById('ibanAccredito');
      const codiceContabilitaInput = document.getElementById('codiceContabilita');
      function refreshCodiceContabilitaState(){
        if (!ibanInput || !codiceContabilitaInput) return;
        if (ibanInput.value && ibanInput.value.trim() !== '') {
          codiceContabilitaInput.disabled = true;
          codiceContabilitaInput.classList.add('disabled');
        } else {
          codiceContabilitaInput.disabled = false;
          codiceContabilitaInput.classList.remove('disabled');
        }
      }
      if (ibanInput && codiceContabilitaInput) {
        ibanInput.addEventListener('input', refreshCodiceContabilitaState);
        refreshCodiceContabilitaState();
      }
      // Se l'utente compila uno qualsiasi dei campi Entrata, scegliamo quale
      // rappresentazione inviare: Entrata completa (IBAN+Tipo+Codice) oppure
      // RiferimentoEntrata (solo Codice) come fallback. Mostriamo un messaggio
      // informativo e non forziamo la validazione lato client per tutti e tre.
      const tipoContSelect = document.getElementById('tipoContabilita');
      const entrataModeInfo = document.createElement('div');
      entrataModeInfo.id = 'entrataModeInfo';
      entrataModeInfo.className = 'form-text small text-muted mb-2';
      // Inseriamo il messaggio subito dopo i campi avanzati
      const apiExtraBody = document.querySelector('#apiExtra .card-body');
      if (apiExtraBody) apiExtraBody.appendChild(entrataModeInfo);

      function refreshEntrataState(){
        if (!codiceContabilitaInput || !tipoContSelect || !ibanInput || !entrataModeInfo) return;
        const hasIban = ibanInput.value && ibanInput.value.trim() !== '';
        const hasTipo = tipoContSelect.value && tipoContSelect.value !== '';
        const hasCod = codiceContabilitaInput.value && codiceContabilitaInput.value.trim() !== '';
        if (hasIban && hasTipo && hasCod) {
          entrataModeInfo.textContent = 'Invio come Entrata completa (IBAN, Tipo contabilita e Codice contabilita).';
          entrataModeInfo.classList.remove('text-danger');
        } else if (hasCod && !(hasIban && hasTipo)) {
          entrataModeInfo.textContent = 'Invio come RiferimentoEntrata (solo codiceEntrata) perché mancano IBAN o Tipo contabilita.';
          entrataModeInfo.classList.add('text-muted');
        } else if (hasIban || hasTipo) {
          entrataModeInfo.textContent = 'Dati parziali: per inviare una Entrata completa compila IBAN, Tipo contabilita e Codice; in alternativa inserisci solo il Codice per inviare un RiferimentoEntrata.';
          entrataModeInfo.classList.add('text-warning');
        } else {
          entrataModeInfo.textContent = '';
          entrataModeInfo.classList.remove('text-warning');
        }
      }
      if (codiceContabilitaInput && tipoContSelect && ibanInput) {
        codiceContabilitaInput.addEventListener('input', refreshEntrataState);
        tipoContSelect.addEventListener('change', refreshEntrataState);
        ibanInput.addEventListener('input', refreshEntrataState);
        refreshEntrataState();
      }
    })();
  </script>
{% endblock %}
