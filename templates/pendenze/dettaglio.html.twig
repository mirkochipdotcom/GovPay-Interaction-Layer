{% extends 'base.html.twig' %}

{% block title %}Pendenza {{ idPendenza }}{% endblock %}

{% block content %}
  <div class="d-flex align-items-center justify-content-between mb-3">
    <h2 class="h4 mb-0">Dettaglio pendenza <span class="text-muted">{{ idPendenza }}</span></h2>
    <div class="d-flex gap-2">
      {% if came_from_insert %}
        <a class="btn btn-primary" href="/pendenze/inserimento">Inserisci nuova pendenza</a>
      {% else %}
        <a class="btn btn-outline-secondary" href="{{ return_url|default('/pendenze/ricerca') }}">&laquo; Torna alla ricerca</a>
      {% endif %}
    </div>

    {# voci spostate dinamicamente per ordine visuale (vedi sotto) #}
  </div>

  {% if error %}
    <div class="alert alert-danger">{{ error }}</div>
  {% endif %}

  {% if pendenza %}
    {% set r = pendenza %}

    {# Raccogli il piano di rateizzazione e normalizza a lista 'rate_info' #}
    {# Normalizziamo la sorgente dei dati delle rate: preferiamo documento.rata, altrimenti proprieta.rate #}
    {% set possible = (r.documento is defined and r.documento.rata is defined) ? r.documento.rata : ((r.proprieta is defined and r.proprieta.rate is defined) ? r.proprieta.rate : []) %}
    {% if possible is iterable %}
      {% set rate_info = possible %}
    {% elseif possible is defined and possible is not empty %}
      {% set rate_info = [possible] %}
    {% else %}
      {% set rate_info = [] %}
    {% endif %}

    {# Calcola displayed_rates se necessario per rateizzazione o bottoni #}
    {% if rate_info|length > 0 or (related_pendenze is defined and related_pendenze|length > 0) %}
      {# Costruisci la lista visibile delle rate aggregando piano + pendenze correlate #}
      {% set selected_rate = (current_rate is defined and current_rate) ? current_rate : null %}
      {% if selected_rate is null %}
        {% if r.documento is defined and r.documento.rata is defined and not (r.documento.rata is iterable) %}
          {% set selected_rate = r.documento.rata %}
        {% endif %}
      {% endif %}

      {% set displayed_rates = [] %}
      {# Aggiungi il piano esplicito (se presente) normalizzando l'indice #}
      {% for rt in rate_info %}
        {# Calcola indice in modo robusto:
           - se rt è oggetto e contiene 'indice' usalo
           - altrimenti se rt è oggetto e contiene 'rata' usalo
           - se rt è scalare (es. "1") usalo come indice
           - fallback su loop.index per conservare ordine se non troviamo altro #}
        {% if rt is iterable %}
          {% if rt.indice is defined %}
            {% set idx = rt.indice %}
          {% elseif rt.rata is defined %}
            {% set idx = rt.rata %}
          {% else %}
            {% set idx = loop.index %}
          {% endif %}
          {% set normalized = rt|merge({'indice': idx}) %}
        {% else %}
          {% set idx = (rt is not null and rt != '') ? (rt|default(0) + 0) : loop.index %}
          {% set normalized = {'indice': idx} %}
        {% endif %}
        {# Riempiamo campi mancanti con valori della pendenza principale quando sensato #}
        {% if (normalized.importo is not defined or not normalized.importo) and r.importo is defined %}
          {% set normalized = normalized|merge({'importo': r.importo}) %}
        {% endif %}
        {% if (normalized.dataValidita is not defined or not normalized.dataValidita) and r.dataValidita is defined %}
          {% set normalized = normalized|merge({'dataValidita': r.dataValidita}) %}
        {% endif %}
        {% if (normalized.dataScadenza is not defined or not normalized.dataScadenza) and r.dataScadenza is defined %}
          {% set normalized = normalized|merge({'dataScadenza': r.dataScadenza}) %}
        {% endif %}
        {% if (normalized.stato is not defined or not normalized.stato) and r.stato is defined %}
          {% set normalized = normalized|merge({'stato': r.stato}) %}
        {% endif %}
        {% if (normalized.numeroAvviso is not defined or not normalized.numeroAvviso) and r.numeroAvviso is defined %}
          {% set normalized = normalized|merge({'numeroAvviso': r.numeroAvviso}) %}
        {% endif %}
        {# Normalizza id pendenza (diverse convenzioni: idPendenza / id_pendenza) #}
        {% if (normalized.idPendenza is not defined or not normalized.idPendenza) %}
          {% if rt.idPendenza is defined and rt.idPendenza %}
            {% set normalized = normalized|merge({'idPendenza': rt.idPendenza}) %}
          {% elseif rt.id_pendenza is defined and rt.id_pendenza %}
            {% set normalized = normalized|merge({'idPendenza': rt.id_pendenza}) %}
          {% elseif r.idPendenza is defined and r.idPendenza %}
            {% set normalized = normalized|merge({'idPendenza': r.idPendenza}) %}
          {% elseif r.id_pendenza is defined and r.id_pendenza %}
            {% set normalized = normalized|merge({'idPendenza': r.id_pendenza}) %}
          {% endif %}
        {% endif %}
        {% if (normalized.iuv is not defined or not normalized.iuv) and (r.identificativoUnivocoVersamento is defined or r.iuv is defined) %}
          {% set iuvFallback = r.identificativoUnivocoVersamento is defined ? r.identificativoUnivocoVersamento : (r.iuv|default('')) %}
          {% if iuvFallback %}{% set normalized = normalized|merge({'iuv': iuvFallback}) %}{% endif %}
        {% endif %}
        {% if (normalized.ccp is not defined or not normalized.ccp) and (r.codiceContestoPagamento is defined or r.ccp is defined) %}
          {% set ccpFallback = r.codiceContestoPagamento is defined ? r.codiceContestoPagamento : (r.ccp|default('')) %}
          {% if ccpFallback %}{% set normalized = normalized|merge({'ccp': ccpFallback}) %}{% endif %}
        {% endif %}
        {% set displayed_rates = displayed_rates|merge([normalized]) %}
      {% endfor %}

      {# Integra rate estratte dalle pendenze correlate (se disponibili) #}
      {% if related_pendenze is defined and related_pendenze|length > 0 %}
        {% for rp in related_pendenze %}
          {% set rp_idx = null %}
          {# Considera la pendenza correlata parte del piano solo se ha valore 'rata' esplicito (non vuoto) #}
          {% if rp.documento is defined and rp.documento.rata is defined %}
            {% if rp.documento.rata is iterable %}
              {% if rp.documento.rata|length > 0 and rp.documento.rata[0] is defined and rp.documento.rata[0].indice is defined %}
                {% set rp_idx = rp.documento.rata[0].indice %}
              {% endif %}
            {% else %}
              {% if rp.documento.rata is not null and rp.documento.rata != '' %}
                {% set rp_idx = rp.documento.rata %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if rp_idx is null and rp.proprieta is defined and rp.proprieta.rate is defined %}
            {% if rp.proprieta.rate is iterable and rp.proprieta.rate|length > 0 and rp.proprieta.rate[0] is defined and rp.proprieta.rate[0].indice is defined %}
              {% set rp_idx = rp.proprieta.rate[0].indice %}
            {% elseif rp.proprieta.rate.indice is defined and rp.proprieta.rate is not null and rp.proprieta.rate != '' %}
              {% set rp_idx = rp.proprieta.rate.indice %}
            {% endif %}
          {% endif %}
          {% if rp_idx is not null %}
            {% set found = false %}
            {% for dr in displayed_rates %}
              {% if not found and dr.indice is defined and (dr.indice|default(0) + 0) == (rp_idx|default(0) + 0) %}
                {% set found = true %}
              {% endif %}
            {% endfor %}
            {% if not found %}
              {% set entry = {'indice': rp_idx} %}
              {% if rp.importo is defined %} {% set entry = entry|merge({'importo': rp.importo}) %} {% endif %}
              {% if rp.dataValidita is defined %} {% set entry = entry|merge({'dataValidita': rp.dataValidita}) %} {% endif %}
              {% if rp.dataScadenza is defined %} {% set entry = entry|merge({'dataScadenza': rp.dataScadenza}) %} {% endif %}
              {% if rp.stato is defined %} {% set entry = entry|merge({'stato': rp.stato}) %} {% endif %}
              {% if rp.numeroAvviso is defined %} {% set entry = entry|merge({'numeroAvviso': rp.numeroAvviso}) %} {% endif %}
              {% if rp.identificativoUnivocoVersamento is defined %} {% set entry = entry|merge({'iuv': rp.identificativoUnivocoVersamento}) %} {% endif %}
              {% if rp.codiceContestoPagamento is defined %} {% set entry = entry|merge({'ccp': rp.codiceContestoPagamento}) %} {% endif %}
              {# Aggiungi idPendenza dalle pendenze correlate se presente (idPendenza o id_pendenza) #}
              {% if rp.idPendenza is defined and rp.idPendenza %}
                {% set entry = entry|merge({'idPendenza': rp.idPendenza}) %}
              {% elseif rp.id_pendenza is defined and rp.id_pendenza %}
                {% set entry = entry|merge({'idPendenza': rp.id_pendenza}) %}
              {% endif %}
              {% set displayed_rates = displayed_rates|merge([entry]) %}
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endif %}

      {# Determina l'indice massimo per ordinare la stampa (fallback: lunghezza lista) #}
      {% set maxIndex = 0 %}
      {% for dr in displayed_rates %}
        {% set cand = (dr.indice|default(0) + 0) %}
        {% if cand > maxIndex %}{% set maxIndex = cand %}{% endif %}
      {% endfor %}
      {% if maxIndex == 0 %}{% set maxIndex = displayed_rates|length %}{% endif %}

    {% else %}
      {% set displayed_rates = [] %}
      {% set selected_rate = null %}
      {% set maxIndex = 0 %}
    {% endif %}

    <div class="card mb-3">
      <div class="card-body">
        {# Prepara dominio e identificativi per i bottoni in alto #}
        {% set idDom = id_dominio|default(pendenza.idDominio|default('')) %}
        {% set topIuv = '' %}
        {% set topCcp = '' %}
        {% if r.rpp is defined and (r.rpp is iterable) and (r.rpp|length > 0) %}
          {% for rr in r.rpp %}
            {% set selectedRt = null %}
            {% if rr.rt is defined and rr.rt[0] is defined %}
              {% set selectedRt = rr.rt|last %}
            {% elseif rr.rt is defined and rr.rt %}
              {% set selectedRt = rr.rt %}
            {% endif %}
            {% set ok = false %}
            {% if selectedRt and selectedRt.datiPagamento is defined %}
              {% if selectedRt.datiPagamento.codiceEsitoPagamento is defined and selectedRt.datiPagamento.codiceEsitoPagamento == '0' %}
                {% set ok = true %}
              {% elseif selectedRt.datiPagamento.datiSingoloPagamento is defined and selectedRt.datiPagamento.datiSingoloPagamento|length > 0 and selectedRt.datiPagamento.datiSingoloPagamento[0].esitoSingoloPagamento is defined and selectedRt.datiPagamento.datiSingoloPagamento[0].esitoSingoloPagamento == 'ESEGUITO' %}
                {% set ok = true %}
              {% endif %}
            {% endif %}
            {% if ok %}
              {% set ccpTop = (rr.rpt is defined and rr.rpt.datiVersamento is defined and rr.rpt.datiVersamento.codiceContestoPagamento is defined) ? rr.rpt.datiVersamento.codiceContestoPagamento : '' %}
              {% set iuvTop = '' %}
              {% if selectedRt and selectedRt.datiPagamento is defined and selectedRt.datiPagamento.identificativoUnivocoVersamento is defined and selectedRt.datiPagamento.identificativoUnivocoVersamento %}
                {% set iuvTop = selectedRt.datiPagamento.identificativoUnivocoVersamento %}
              {% elseif rr.rpt is defined and rr.rpt.datiVersamento is defined and rr.rpt.datiVersamento.identificativoUnivocoVersamento is defined %}
                {% set iuvTop = rr.rpt.datiVersamento.identificativoUnivocoVersamento %}
              {% endif %}
              {% if ccpTop and iuvTop %}
                {% set topIuv = iuvTop %}
                {% set topCcp = ccpTop %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}

        <div class="d-flex flex-wrap align-items-center gap-3">
          <div>
            <div class="text-muted small">Stato</div>
            {% include 'partials/state_badge.html.twig' with { state: r.stato|default(''), pill: false } %}
          </div>
          <div>
            <div class="text-muted small">Importo</div>
            <div class="h5 mb-0">{{ r.importo is defined ? (r.importo|number_format(2, ',', '.')) ~ ' €' : '—' }}</div>
          </div>
          <div>
            <div class="text-muted small">Data avviso</div>
            {% set da = r.dataCaricamento|default('') %}
            <div class="mb-0">{{ da ? (da|date('d/m/Y')) : '—' }}</div>
          </div>
          <div>
            <div class="text-muted small">Scadenza</div>
            {% set ds = r.dataScadenza|default('') %}
            <div class="mb-0">{{ ds ? (ds|date('d/m/Y')) : '—' }}</div>
          </div>
          <div>
            <div class="text-muted small">Validità</div>
            {% set dv = r.dataValidita|default('') %}
            <div class="mb-0">{{ dv ? (dv|date('d/m/Y')) : '—' }}</div>
          </div>
          <div>
            <div class="text-muted small">Pagamento</div>
            {% set dp = r.dataPagamento|default('') %}
            <div class="mb-0">{{ dp ? (dp|date('d/m/Y')) : '—' }}</div>
          </div>
          {# Bottoni in alto, accanto alla zona pagamento #}
          {% if idDom and (r.numeroAvviso or (topIuv and topCcp) or (displayed_rates|length > 0)) %}
          <div class="d-flex align-items-center gap-2 ms-auto">
            {% if idDom and r.numeroAvviso %}
              <a class="btn btn-primary btn-sm" href="/avvisi/{{ idDom|url_encode }}/{{ r.numeroAvviso|url_encode }}" target="_blank" rel="noopener" title="Scarica avviso (PDF)">
                <i class="fas fa-file-pdf me-1"></i> Avviso
              </a>
            {% endif %}
            {% if idDom and topIuv and topCcp %}
              <a class="btn btn-outline-success btn-sm" href="/pendenze/rpp/{{ idDom|url_encode }}/{{ topIuv|url_encode }}/{{ topCcp|url_encode }}/rt" target="_blank" rel="noopener" title="Scarica ricevuta (IUV {{ topIuv }}, CCP {{ topCcp }})">
                <i class="fas fa-file-pdf me-1"></i> Ricevuta
              </a>
            {% endif %}
            {# Bottone Rate: solo se abbiamo rate con numeriAvviso #}
            {% set numeri = [] %}
            {% if displayed_rates is defined %}
              {% for dr in displayed_rates %}
                {% if dr.numeroAvviso is defined and dr.numeroAvviso %}
                  {% set numeri = numeri|merge([dr.numeroAvviso]) %}
                {% endif %}
              {% endfor %}
            {% endif %}
            {% if numeri|length > 0 %}
              <button id="stampa-rate-btn" class="btn btn-success btn-sm" title="Scarica documento rate (PDF)">
                <i class="fas fa-file-pdf me-1"></i> Rate
              </button>
              <script>
                (function(){
                  const btn = document.getElementById('stampa-rate-btn');
                  const numeri = {{ numeri|json_encode|raw }};
                  const docId = '{{ r.documento.identificativo|e('js') }}';
                  btn.addEventListener('click', async function(e){
                    e.preventDefault();
                    if (!numeri || numeri.length === 0) {
                      alert('Nessun avviso disponibile per il download');
                      return;
                    }
                    // Verifica che docId sia valorizzato
                    if (!docId || docId === '') {
                      alert('Identificativo documento mancante; impossibile procedere con la stampa.');
                      console.error('stampa: docId mancante', { docId, numeri });
                      return;
                    }
                    // Log per capire eventuali 404
                    console.debug('Chiamata stampa avvisi', { url: '/documenti/' + docId + '/avvisi', numeri });
                    btn.disabled = true;
                    const orig = btn.textContent;
                    btn.textContent = 'Preparazione...';
                    try {
                      const resp = await fetch('/documenti/' + encodeURIComponent(docId) + '/avvisi', {
                        method: 'POST',
                        headers: {'Accept':'application/pdf','Content-Type':'application/json'},
                        body: JSON.stringify({ numeriAvviso: numeri })
                      });
                      if (!resp.ok) throw new Error('Errore server: ' + resp.status);
                      const blob = await resp.blob();
                      const url = URL.createObjectURL(blob);
                      window.open(url, '_blank');
                    } catch (err) {
                      alert('Errore durante la chiamata API: ' + err.message);
                      console.error(err);
                    } finally {
                      btn.disabled = false;
                      btn.textContent = orig;
                    }
                  });
                })();
              </script>
            {% endif %}
          </div>
          {% endif %}
        </div>
      </div>
    </div>

    <div class="row g-3">
      <div class="col-md-6">
        <div class="card h-100">
          {% set sogg = r.soggettoPagatore|default({}) %}
          {% set tipo = sogg.tipo|default('') %}
          {% if tipo != 'F' and tipo != 'G' %}
            {% set tipo = sogg.denominazione ? 'G' : 'F' %}
          {% endif %}
          <div class="card-header d-flex align-items-center gap-2">
            <span class="text-secondary" title="{{ tipo == 'F' ? 'Persona fisica' : 'Persona giuridica' }}">
              <i class="fas {{ tipo == 'F' ? 'fa-user' : 'fa-building' }}"></i>
            </span>
            <span>Soggetto pagatore</span>
          </div>
          <div class="card-body">
            <div>
              <span class="text-muted">Identificativo:</span> <strong>{{ sogg.identificativo|default('—') }}</strong>
            </div>
            <div><span class="text-muted">Anagrafica:</span> {{ sogg.anagrafica|default(sogg.denominazione|default('—')) }}</div>
            {% if sogg.email %}<div><span class="text-muted">Email:</span> {{ sogg.email }}</div>{% endif %}
            {% set parti = [] %}
            {% if sogg.indirizzo %}{% set parti = parti|merge([sogg.indirizzo]) %}{% endif %}
            {% if sogg.civico %}{% set parti = parti|merge([sogg.civico]) %}{% endif %}
            {% if sogg.localita %}{% set parti = parti|merge([sogg.localita]) %}{% endif %}
            {% if sogg.provincia %}{% set parti = parti|merge([sogg.provincia]) %}{% endif %}
            {% if sogg.nazione %}{% set parti = parti|merge([sogg.nazione]) %}{% endif %}
            {% if parti|length > 0 %}<div><span class="text-muted">Indirizzo:</span> {{ parti|join(', ') }}</div>{% endif %}
          </div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="card h-100">
          <div class="card-header">Dettagli pendenza</div>
          <div class="card-body">
            <div><span class="text-muted">Causale:</span> {{ r.causale|default(r.nome|default('—')) }}</div>
            {% set tipo_key = r.tipoPendenza.idTipoPendenza|default('') %}
            {# tipologie è un array di oggetti {id_entrata, descrizione, ...} -> cerchiamo la corrispondenza #}
            {% set tipo_descr = null %}
            {% if tipologie is iterable %}
              {% for t in tipologie %}
                {% if t.id_entrata is defined and t.id_entrata == tipo_key %}
                  {% set tipo_descr = t.descrizione|default(tipo_descr) %}
                {% endif %}
              {% endfor %}
            {% endif %}
            <div><span class="text-muted">Tipo:</span> {{ tipo_descr|default(r.tipoPendenza.descrizione | default(tipo_key | default('—'))) }}</div>
            <div><span class="text-muted">Numero avviso:</span> {{ r.numeroAvviso|default('—') }}</div>
            <div><span class="text-muted">Numero Documento:</span> {{ r.documento.identificativo|default('—') }}</div>
            {% if r.idPagamento %}<div><span class="text-muted">ID Pagamento:</span> {{ r.idPagamento }}</div>{% endif %}
          </div>
        </div>
      </div>
    </div>

    {# Mostra la sezione Rateizzazione: se abbiamo il piano lo includiamo qui.
      L'evidenziazione è deterministica: usiamo prima la variabile controller-provided
      `current_rate` se presente, altrimenti solo il valore scalare `documento.rata`.
      Non applichiamo inferenze o fallback automatici lato template. #}
      {% if numeri|length > 0 %}

        <div class="card mt-3">
          <div class="card-header d-flex align-items-center justify-content-between">
            <h3 class="h6 mb-0">Rateizzazione <span class="badge bg-secondary ms-2">{{ displayed_rates|length }} rate</span> - Doc. {{ r.documento.identificativo|default('—') }}{% if selected_rate %} - Rata #{{ selected_rate }}{% endif %}</h3>
          </div>
          <div class="card-body">

            <div class="table-responsive">
              <table class="table table-sm align-middle mb-0">
                <thead class="table-light">
                  <tr>
                    <th>#</th>
                    <th>Importo</th>
                    <th>Validità</th>
                    <th>Scadenza</th>
                    <th>Stato</th>
                    <th>Descrizione</th>
                    <th>ID pendenza</th>
                    <th>Azioni</th>
                  </tr>
                </thead>
                <tbody>
                  {% for i in 1..maxIndex %}
                    {# Cerca un'eventuale voce normalizzata per questo indice #}
                    {% set rt = null %}
                    {% for dr in displayed_rates %}
                      {% if rt is null and (dr.indice|default(0) + 0) == i %}
                        {% set rt = dr %}
                      {% endif %}
                    {% endfor %}
                    <tr class="{{ (selected_rate is defined and selected_rate is not null and (i == (selected_rate|default(0) + 0))) ? 'table-info' : '' }}">
                      <td>{{ i }}</td>
                      <td class="text-end">{% if rt is not null and rt.importo is defined %}{{ rt.importo|number_format(2, ',', '.') }} €{% else %}—{% endif %}</td>
                      <td>{% if rt is not null and rt.dataValidita is defined and rt.dataValidita %}{{ rt.dataValidita|date('d/m/Y') }}{% else %}—{% endif %}</td>
                      <td>{% if rt is not null and rt.dataScadenza is defined and rt.dataScadenza %}{{ rt.dataScadenza|date('d/m/Y') }}{% else %}—{% endif %}</td>
                      {# Stato: mostra badge colorato usando pendenza_states quando possibile #}
                      {% set st_rt = (rt is not null and rt.stato is defined) ? rt.stato : '' %}
                      {% if st_rt %}
                        <td>{% include 'partials/state_badge.html.twig' with { state: st_rt, pill: true, small: false } %}</td>
                      {% else %}
                        <td>—</td>
                      {% endif %}
                      <td>{% if rt is not null and rt.descrizione is defined and rt.descrizione %}{{ rt.descrizione }}{% elseif rt is not null and rt.causale is defined and rt.causale %}{{ rt.causale }}{% else %}—{% endif %}</td>
                      <td>{{ rt is not null and rt.idPendenza is defined ? rt.idPendenza : (rt is not null and rt.id_pendenza is defined ? rt.id_pendenza : '—') }}</td>
                      <td class="text-nowrap">
                        {# Link al dettaglio della pendenza (occhio) #}
                        {% set rowId = rt is not null and rt.idPendenza is defined and rt.idPendenza ? rt.idPendenza : (rt is not null and rt.id_pendenza is defined and rt.id_pendenza ? rt.id_pendenza : '') %}
                        {% if rowId %}
                          <a class="btn btn-outline-secondary btn-sm px-2 py-0" href="/pendenze/dettaglio/{{ rowId|url_encode }}" title="Apri dettaglio pendenza {{ rowId }}" aria-label="Apri dettaglio pendenza {{ rowId }}">
                            <i class="fas fa-eye" aria-hidden="true"></i>
                          </a>
                        {% else %}
                          <span class="text-muted">—</span>
                        {% endif %}
                      </td>
                    </tr>
                  {% endfor %}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      {% elseif r.proprieta is defined and r.proprieta.numeroRate is defined %}
        <div class="card mt-3">
          <div class="card-header">
            <h3 class="h6 mb-0">Rateizzazione</h3>
          </div>
          <div class="card-body">
            <div class="text-muted small">Numero di rate</div>
            <div class="h5 mb-0">{{ r.proprieta.numeroRate }}</div>
          </div>
        </div>
      {% elseif r.documento is defined and r.documento.rata is defined and not (r.documento.rata is iterable) and r.documento.rata != 0 %}
        <div class="card mt-3">
          <div class="card-header">
            <h3 class="h6 mb-0">Rateizzazione</h3>
          </div>
          <div class="card-body">
            <div class="text-muted small">Rata</div>
            <div class="h5 mb-0">#{{ r.documento.rata }}</div>
            <div class="text-muted">Documento: {{ r.documento.identificativo|default('—') }}</div>
          </div>
        </div>
      {% endif %}

      {# Voci di pendenza: elenco dettagliato delle singole voci (posizionato prima dei tentativi RPP) #}
    {% set voci_list = (r.voci is iterable) ? r.voci : (r.voci is defined and r.voci ? [r.voci] : []) %}
    <div class="card mt-3">
      <div class="card-header d-flex align-items-center justify-content-between">
        <h3 class="h6 mb-0">Voci di pendenza <span class="badge bg-secondary ms-2">{{ voci_list|length }}</span></h3>
      </div>
      <div class="card-body">
        {% if voci_list|length > 0 %}
          <div class="table-responsive">
            <table class="table table-sm align-middle mb-0">
              <thead class="table-light">
                <tr>
                  <th scope="col">#</th>
                  <th scope="col">ID voce</th>
                  <th scope="col">Descrizione</th>
                  <th scope="col" class="text-end">Importo</th>
                  <th scope="col">Stato</th>
                  <th scope="col">Descrizione tipologia</th>
                  <th scope="col">IBAN</th>
                  <th scope="col">Tipo cont.</th>
                  <th scope="col">Contabilità</th>
                </tr>
              </thead>
              <tbody>
                {% for voce in voci_list %}
                  <tr>
                    <td>{{ voce.indice|default(loop.index) }}</td>
                    <td>{{ voce.idVocePendenza|default('—') }}</td>
                    <td>{{ voce.descrizione|default('—') }}</td>
                    <td class="text-end">{% if voce.importo is defined %}{{ voce.importo|number_format(2, ',', '.') }} €{% else %}—{% endif %}</td>
                    <td>
                      {% set st_voce = voce.stato|default('') %}
                      {% include 'partials/state_badge.html.twig' with { state: st_voce, pill: false, small: true } %}
                    </td>
                    <td class="text-break small">
                      {% set codice = voce.codiceContabilita|default('') %}
                      {# Cerca nella lista tipologie l'oggetto con id_entrata == codice #}
                      {% set desc_tipologia = null %}
                      {% if tipologie is iterable %}
                        {% for t in tipologie %}
                          {% if t.id_entrata is defined and t.id_entrata == codice %}
                            {% set desc_tipologia = t.descrizione|default(desc_tipologia) %}
                          {% endif %}
                        {% endfor %}
                      {% endif %}
                      {{ desc_tipologia|default(voce.codiceContabilita | default('—')) }}
                    </td>
                    <td class="text-break small">{{ voce.ibanAccredito|default('—') }}</td>
                    <td class="text-nowrap">{{ voce.tipoContabilita|default('—') }}</td>
                    <td>
                      {% if voce.contabilita is defined and voce.contabilita.quote is iterable and voce.contabilita.quote|length > 0 %}
                        {% for q in voce.contabilita.quote %}
                          <div class="small text-muted">
                            {% set capitolo = q.capitolo|default('') %}
                            {% set anno = q.anno_esercizio is defined ? q.anno_esercizio : (q.annoEsercizio|default('')) %}
                            {% if capitolo %}<strong>Cap:</strong> {{ capitolo }}{% endif %}
                            {% if anno %} <span class="ms-1"><strong>Anno:</strong> {{ anno }}</span>{% endif %}
                            {% if q.importo is defined %} <div class="text-end">{{ q.importo|number_format(2, ',', '.') }} €</div>{% endif %}
                          </div>
                        {% endfor %}
                      {% else %}
                        —
                      {% endif %}
                    </td>
                  </tr>
                {% endfor %}
              </tbody>
            </table>
          </div>
        {% else %}
          <div class="text-muted">Nessuna voce disponibile per questa pendenza.</div>
        {% endif %}
      </div>
    </div>

    {# Collapse Ricevute Telematiche (RT) sotto ciascun tentativo RPP #}
    {% set rpp = r.rpp|default([]) %}
    {% set rppCount = (rpp is iterable) ? (rpp|length) : 0 %}
    <div class="card mt-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <button class="btn btn-sm btn-outline-secondary" type="button"
          {% if rppCount == 0 %}disabled aria-disabled="true"{% else %}data-bs-toggle="collapse" data-bs-target="#rtCollapse" aria-expanded="false" aria-controls="rtCollapse"{% endif %}>
          Mostra tentativi di pagamento <span class="badge bg-secondary">{{ rppCount }}</span>
        </button>
      </div>
      {% if rppCount > 0 %}
      <div class="collapse" id="rtCollapse">
        <div class="card-body">
              <div class="table-responsive small">
                <table class="table table-striped table-sm align-middle">
                  <thead>
                    <tr>
                      <th>Identificativo pagamento</th>
                      <th>Data e ora</th>
                      <th>Stato</th>
                      <th class="text-end">Importo</th>
                      <th>ABI</th>
                      <th>Istituto</th>
                      <th class="text-center">Ricevuta</th>
                    </tr>
                  </thead>
                  <tbody>
                  {% for rr in rpp %}
                    {# Seleziona la RT da usare: ultima se array, altrimenti singola #}
                    {% set selectedRt = null %}
                    {# Se rr.rt[0] esiste: è una lista di RT; altrimenti è un singolo oggetto RT #}
                    {% if rr.rt is defined and rr.rt[0] is defined %}
                      {% set selectedRt = rr.rt|last %}
                    {% elseif rr.rt is defined and rr.rt %}
                      {% set selectedRt = rr.rt %}
                    {% endif %}

                    {# Identificativo: da RPT -> datiVersamento -> codiceContestoPagamento #}
                    {% set idPago = rr.rpt is defined and rr.rpt.datiVersamento is defined and rr.rpt.datiVersamento.codiceContestoPagamento is defined 
                      ? rr.rpt.datiVersamento.codiceContestoPagamento 
                      : '' %}
                    {# Data e ora: dataEsecuzionePagamento (data) + ora di dataOraMessaggioRichiesta #}
                    {% set dataExec = rr.rpt is defined and rr.rpt.datiVersamento is defined and rr.rpt.datiVersamento.dataEsecuzionePagamento is defined ? rr.rpt.datiVersamento.dataEsecuzionePagamento : '' %}
                    {% set oraMsg = rr.rpt is defined and rr.rpt.dataOraMessaggioRichiesta is defined ? rr.rpt.dataOraMessaggioRichiesta : '' %}
                    {# Normalizza data e ora in stringhe sicure prima di concatenare #}
                    {% set combinedTs = '' %}
                    {% if dataExec %}
                      {% set dataExecStr = dataExec|date('Y-m-d') %}
                      {% set timeStr = oraMsg ? (oraMsg|date('H:i:s')) : '00:00:00' %}
                      {% set combinedTs = dataExecStr ~ ' ' ~ timeStr %}
                    {% endif %}
                    {# Importo: da RPT -> datiVersamento -> datiSingoloVersamento[0] -> importoSingoloVersamento #}
                    {% set importo = (rr.rpt is defined and rr.rpt.datiVersamento is defined and rr.rpt.datiVersamento.datiSingoloVersamento is defined and rr.rpt.datiVersamento.datiSingoloVersamento|length > 0 and rr.rpt.datiVersamento.datiSingoloVersamento[0].importoSingoloVersamento is defined)
                      ? rr.rpt.datiVersamento.datiSingoloVersamento[0].importoSingoloVersamento
                      : null %}
                    {# ABI/Istituto: da selectedRt -> istitutoAttestante #}
                    {% set abi = (selectedRt and selectedRt.istitutoAttestante is defined and selectedRt.istitutoAttestante.identificativoUnivocoAttestante is defined)
                      ? (selectedRt.istitutoAttestante.identificativoUnivocoAttestante.codiceIdentificativoUnivoco|default(''))
                      : '' %}
                    {% set istituto = (selectedRt and selectedRt.istitutoAttestante is defined)
                      ? (selectedRt.istitutoAttestante.denominazioneAttestante|default(''))
                      : '' %}
                    {# Stato: da selectedRt -> datiPagamento -> datiSingoloPagamento[0] -> esitoSingoloPagamento #}
                    {% set stato = '' %}
                    {% if selectedRt and selectedRt.datiPagamento is defined and selectedRt.datiPagamento.datiSingoloPagamento is defined and selectedRt.datiPagamento.datiSingoloPagamento|length > 0 and selectedRt.datiPagamento.datiSingoloPagamento[0].esitoSingoloPagamento is defined %}
                      {% set stato = selectedRt.datiPagamento.datiSingoloPagamento[0].esitoSingoloPagamento %}
                    {% endif %}
                    {# IUV: preferisci da RT.datiPagamento.identificativoUnivocoVersamento; fallback RPT.datiVersamento.identificativoUnivocoVersamento #}
                    {% set iuv = '' %}
                    {% if selectedRt and selectedRt.datiPagamento is defined and selectedRt.datiPagamento.identificativoUnivocoVersamento is defined and selectedRt.datiPagamento.identificativoUnivocoVersamento %}
                      {% set iuv = selectedRt.datiPagamento.identificativoUnivocoVersamento %}
                    {% elseif rr.rpt is defined and rr.rpt.datiVersamento is defined and rr.rpt.datiVersamento.identificativoUnivocoVersamento is defined %}
                      {% set iuv = rr.rpt.datiVersamento.identificativoUnivocoVersamento %}
                    {% else %}
                      {% set iuv = r.iuv|default('') %}
                    {% endif %}
                    {# idDominio: preferisci quello dalla RPT; fallback al dominio nella pendenza; infine ENV passato come id_dominio #}
                    {% set idDom = '' %}
                    {% if rr.rpt is defined and rr.rpt.dominio is defined and rr.rpt.dominio.identificativoDominio is defined and rr.rpt.dominio.identificativoDominio %}
                      {% set idDom = rr.rpt.dominio.identificativoDominio %}
                    {% elseif r.dominio is defined and r.dominio.idDominio is defined and r.dominio.idDominio %}
                      {% set idDom = r.dominio.idDominio %}
                    {% else %}
                      {% set idDom = id_dominio|default('') %}
                    {% endif %}
                    {# CCP per RT via Pendenze: preferisci codiceContestoPagamento #}
                    {% set ccp = idPago %}
                    {# Mostra bottone ricevuta solo se esito positivo #}
                    {% set esitoOk = false %}
                    {% if selectedRt and selectedRt.datiPagamento is defined %}
                      {% if selectedRt.datiPagamento.codiceEsitoPagamento is defined and selectedRt.datiPagamento.codiceEsitoPagamento == '0' %}
                        {% set esitoOk = true %}
                      {% elseif selectedRt.datiPagamento.datiSingoloPagamento is defined and selectedRt.datiPagamento.datiSingoloPagamento|length > 0 and selectedRt.datiPagamento.datiSingoloPagamento[0].esitoSingoloPagamento is defined and selectedRt.datiPagamento.datiSingoloPagamento[0].esitoSingoloPagamento == 'ESEGUITO' %}
                        {% set esitoOk = true %}
                      {% endif %}
                    {% endif %}
                    {% set displayId = idPago ?: iuv %}
                    <tr>
                      <td>{{ displayId ?: '—' }}</td>
                      <td class="text-nowrap">{% if combinedTs %}{{ combinedTs|date('d/m/Y H:i:s') }}{% else %}—{% endif %}</td>
                      <td>{{ stato ?: '—' }}</td>
                      <td class="text-end">{% if importo is not null %}{{ importo|number_format(2, ',', '.') }} €{% else %}—{% endif %}</td>
                      <td>{{ abi ?: '—' }}</td>
                      <td>{{ istituto ?: '—' }}</td>
                      <td class="text-center">
                        {% set hasLink = idDom and iuv and ccp %}
                        {% set btnClass = esitoOk ? 'btn-success' : 'btn-outline-secondary' %}
                        {% if hasLink %}
                          <a class="btn {{ btnClass }} btn-sm px-2 py-0" href="/pendenze/rpp/{{ idDom|url_encode }}/{{ iuv|url_encode }}/{{ ccp|url_encode }}/rt" title="Scarica ricevuta (IUV {{ iuv }}, CCP {{ ccp }})" aria-label="Scarica ricevuta">
                            <i class="fas fa-file-pdf"></i>
                          </a>
                        {% else %}
                          <button class="btn btn-outline-secondary btn-sm px-2 py-0" type="button" disabled title="Ricevuta non disponibile">
                            <i class="fas fa-file-pdf"></i>
                          </button>
                        {% endif %}
                      </td>
                    </tr>
                  {% endfor %}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
      {% endif %}
    </div>

          {# Rate plan is displayed inside the 'Rateizzazione' card above. #}

    {% if app_debug %}
      <div class="card mt-3">
        <div class="card-header d-flex justify-content-between align-items-center">
          <span class="badge bg-warning text-dark">Debug</span>
          <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#rawCollapse" aria-expanded="false" aria-controls="rawCollapse">Mostra/Nascondi</button>
        </div>
        <div class="collapse" id="rawCollapse">
          <div class="card-body">
            <pre>{{ displayed_rates|json_encode(constant('JSON_PRETTY_PRINT')) }}</pre>
            <pre>{{ tipologie|json_encode(constant('JSON_PRETTY_PRINT')) }}</pre>
            <pre class="mb-0">{{ pendenza|json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_UNESCAPED_SLASHES')) }}</pre>
          </div>
        </div>
      </div>
      {# Removed related_pendenze view: all rates are shown in the Rateizzazione section above. #}
    {% endif %}
  {% else %}
    {% if not error %}
      <div class="alert alert-warning">Nessun dato pendenza disponibile.</div>
    {% endif %}
  {% endif %}

  <div class="mt-3">
    {% if came_from_insert %}
      <a class="btn btn-primary" href="/pendenze/inserimento">Inserisci nuova pendenza</a>
    {% else %}
      <a class="btn btn-outline-secondary" href="{{ return_url|default('/pendenze/ricerca') }}">&laquo; Torna alla ricerca</a>
    {% endif %}
  </div>
{% endblock %}
